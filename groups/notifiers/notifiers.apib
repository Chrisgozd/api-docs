Group Notifiers
===================

This section contains information about notifiers as used within the Metasys API.

### Retrieve notifiers for server [GET /notifiers]
Retrieves list of all supported notifiers for server

+ Request
    + Headers

            Accept: application/vnd.metasysapi.v2+json
            Authorization: Bearer [token]

+ Response 200 (application/vnd.metasysapi.v2+json)
    + Headers

    + Attributes (array[NotifierEntity])

    + Body

            [
                {
                    "type":"email",
                    "label":"Email",
                    "configurationUrl": "https://{hostname}/api/v2/notifiers/email/configuration",
                    "destinationUrl": "https://{hostname}/api/v2/notifiers/email/destinations",
                    "readOnly": true
                },
                {
                    "type":"printer",
                    "label":"Printer",
                    "configurationUrl": "https://{hostname}/api/v2/notifiers/printer/configuration",
                    "destinationUrl": "https://{hostname}/api/v2/notifiers/printer/destinations",
                    "readOnly": true
                },
                {
                    "type":"snmp",
                    "label":"SNMP",
                    "configurationUrl": "https://{hostname}/api/v2/notifiers/snmp/configuration",
                    "destinationUrl": "https://{hostname}/api/v2/notifiers/snmp/destinations",
                    "readOnly": false
                },
                {
                    "type":"syslog",
                    "label":"Syslog",
                    "configurationUrl": "https://{hostname}/api/v2/notifiers/syslog/configuration",
                    "destinationUrl": "https://{hostname}/api/v2/notifiers/syslog/destinations",
                    "readOnly": true
                }
            ]

### Retrieve notifiers for network device [GET /networkDevices/{id}/notifiers]
Retrieves a collection of all supported notifiers for the specified network device

+ Parameters
    + id (string) - The unique identifier of the network device

+ Request
    + Headers

            Accept: application/vnd.metasysapi.v2+json
            Authorization: Bearer [token]

+ Response 200 (application/vnd.metasysapi.v2+json)
    + Headers

    + Attributes (array[NotifierEntity])

    + Body

            [
                {
                    "type":"email",
                    "label":"Email",
                    "configurationUrl": "https://{hostname}/api/v2/notifiers/email/configuration",
                    "destinationUrl": "https://{hostname}/api/v2/notifiers/email/destinations",
                    "readOnly": true
                },
                {
                    "type":"printer",
                    "label":"Printer",
                    "configurationUrl": "https://{hostname}/api/v2/notifiers/printer/configuration",
                    "destinationUrl": "https://{hostname}/api/v2/notifiers/printer/destinations",
                    "readOnly": true
                },
                {
                    "type":"snmp",
                    "label":"SNMP",
                    "configurationUrl": "https://{hostname}/api/v2/notifiers/snmp/configuration",
                    "destinationUrl": "https://{hostname}/api/v2/notifiers/snmp/destinations",
                    "readOnly": true
                },
                {
                    "type":"syslog",
                    "label":"Syslog",
                    "configurationUrl": "https://{hostname}/api/v2/notifiers/syslog/configuration",
                    "destinationUrl": "https://{hostname}/api/v2/notifiers/syslog/destinations",
                    "readOnly": true
                }
            ]

## Email Notifier Configuration for Server [/notifiers/email/configuration]
This section contains information about a notifier's configuration as used within the Metasys API

### Retrieve email configuration for server [GET]
Retrieves email notifier configuration for the server

+ Request
    + Headers

            Accept: application/vnd.metasysapi.v2+json
            Authorization: Bearer [token]

+ Response 200 (application/vnd.metasysapi.v2+json)
    + Headers

    + Attributes(EmailNotifierConfigurationEntity)

### Retrieve email configuration constraints for server [GET /notifiers/email/configuration/constraints]
Retrieves constraints for the email notifier configuration of the server

+ Request
    + Headers

            Accept: application/vnd.metasysapi.v2+json
            Authorization: Bearer [token]

+ Response 200 (application/vnd.metasysapi.v2+json)
    + Headers

    + Attributes(EmailNotifierConfigurationConstraint)

### Update email configuration for server [PUT]
Update email notifier configuration for server.

+ Request

    + Attributes(UpdateEmailNotifierConfiguration)

    + Body

            {
            "sslEmailEnabled":false,
            "sslEmailIgnoreErrors":false,
            "authenticationType": "smtp",
            "fromEmailAddress": "metasys@jci.com",
            "smtpHostname": "smtp.jci.com",
            "smtpPort": 587,
            "popConfiguration":
                {
                    "hostname": "pop.jci.com",
                    "password": "password",
                    "username": "sample@jci.com"
                },
            "smtpConfiguration":
                {
                    "password": "password",
                    "username": "sample@jci.com"
                }
            }

    + Headers

            Accept: application/vnd.metasysapi.v2+json
            Authorization: Bearer [token]

+ Response 204

### Partially update email configuration for server [PATCH]
Partially update email notifier configuration for server. User can edit  the `sslEmailEnabled`, `sslEmailIgnoreErrors`, `authenticationType`, `fromEmailAddress`, `smtpHostname`, `smtpPort`, `popConfiguration` and `smtpConfiguration` properties.

+ Request

    + Attributes(UpdateEmailNotifierConfiguration)

    + Body

            {
            "sslEmailEnabled":false,
            "sslEmailIgnoreErrors":false,
            "authenticationType": "smtp",
            "fromEmailAddress": "metasys@jci.com",
            "smtpHostname": "smtp.jci.com",
            "smtpPort": 587,
            "popConfiguration":
                {
                    "hostname": "pop.jci.com",
                    "password": "password",
                    "username": "sample@jci.com"
                },
            "smtpConfiguration":
                {
                    "password": "password",
                    "username": "sample@jci.com"
                }
            }

    + Headers

            Accept: application/vnd.metasysapi.v2+json
            Authorization: Bearer [token]

+ Response 204

## Email Notifier Configuration for Network Device [/networkDevices/{id}/notifiers/email/configuration]
This section contains information about a notifier's configuration as used within the Metasys API

+ Parameters
    + id (string) - The unique identifier of the network device

### Retrieve email configuration for network device [GET]
Retrieves email notifier configuration for network device

+ Request
    + Headers

            Accept: application/vnd.metasysapi.v2+json
            Authorization: Bearer [token]

+ Response 200 (application/vnd.metasysapi.v2+json)
    + Headers

    + Attributes(EmailNotifierConfigurationEntity)

### Retrieve email configuration constraints for network device [GET /networkDevices/{id}/notifiers/email/configuration/constraints]
Retrieves constraints for the email notifier configuration of the network device.

+ Request
    + Headers

            Accept: application/vnd.metasysapi.v2+json
            Authorization: Bearer [token]

+ Response 200 (application/vnd.metasysapi.v2+json)
    + Headers

    + Attributes(EmailNotifierConfigurationConstraint)

### Update email configuration for network device [PUT]
Update email notifier configuration for network device.

+ Request

    + Attributes(UpdateEmailNotifierConfiguration)

    + Body

            {
            "sslEmailEnabled":false,
            "sslEmailIgnoreErrors":false,
            "authenticationType": "smtp",
            "fromEmailAddress": "metasys@jci.com",
            "smtpHostname": "smtp.jci.com",
            "smtpPort": 587,
            "popConfiguration":
                {
                    "hostname": "pop.jci.com",
                    "password": "password",
                    "username": "sample@jci.com"
                },
            "smtpConfiguration":
                {
                    "password": "password",
                    "username": "sample@jci.com"
                }
            }

    + Headers

            Accept: application/vnd.metasysapi.v2+json
            Authorization: Bearer [token]

+ Response 204

### Partially update email configuration for network device [PATCH]
Partially update email notifier configuration for network device. User can edit  the `sslEmailEnabled`, `sslEmailIgnoreErrors`, `authenticationType`, `fromEmailAddress`, `smtpHostname`, `smtpPort`, `popConfiguration` and `smtpConfiguration` properties.

+ Request

    + Attributes(UpdateEmailNotifierConfiguration)

    + Body

            {
            "sslEmailEnabled":false,
            "sslEmailIgnoreErrors":false,
            "authenticationType": "smtp",
            "fromEmailAddress": "metasys@jci.com",
            "smtpHostname": "smtp.jci.com",
            "smtpPort": 587,
            "popConfiguration":
                {
                    "hostname": "pop.jci.com",
                    "password": "password",
                    "username": "sample@jci.com"
                },
            "smtpConfiguration":
                {
                    "password": "password",
                    "username": "sample@jci.com"
                }
            }

    + Headers

            Accept: application/vnd.metasysapi.v2+json
            Authorization: Bearer [token]

+ Response 204

## Email Notifier Destinations for Server [/notifiers/email/destinations]
This section contains information about a notifier's destinations as used within the Metasys API

### Retrieve email destinations for server [GET]
Retrieve email notifier destinations for server

+ Request
    + Headers

            Accept: application/vnd.metasysapi.v2+json
            Authorization: Bearer [token]

+ Response 200 (application/vnd.metasysapi.v2+json)
    + Headers

    + Attributes(EmailNotifierDestinationContainerForServer)

    + Body

            {
            "type": "email",
            "label": "Email",
            "destinations":
                [
                    {
                        "id": "f391d369-7eaa-5deb-8d1d-fb6697d679fc",
                        "label": "Destination 1",
                        "toEmailAddresses": [ "operator@jci.com" ],
                        "priority": "Normal",
                        "subject": "Floor One",
                        "retries": 3,
                        "enabled": true,
                        "readOnly": false,
                        "eventFilter":
                            [
                                {
                                    "name": "Current Status",
                                    "operator": "==",
                                    "values":
                                        [
                                            {
                                                "value": "Normal"
                                            }
                                        ]
                                },
                                {
                                    "name": "Priority",
                                    "operator": "!=",
                                    "values":
                                        [
                                            {
                                                "value": "120"
                                            }
                                        ]
                                },
                                {
                                    "name": "Spaces",
                                    "operator": "==",
                                    "values":
                                        [
                                            {
                                                "name": "AHU_Floor",
                                                "isAuthorized": true,
                                                "isDeleted": false,
                                                "value": "Generic 1.AHUSpace.AHU_Floor"
                                            },
                                            {
                                                "name": "AHU_Room 12",
                                                "isAuthorized": true,
                                                "isDeleted": false,
                                                "value": "Generic 1.AHUSpace.AHU_Floor.AHU_Room 12"
                                            }
                                        ]
                                },
                                {
                                    "name": "Equipment",
                                    "operator": "==",
                                    "values":
                                        [
                                            {
                                                "name": "999 AHU_Generic2",
                                                "isAuthorized": true,
                                                "isDeleted": false,
                                                "value": "equipment.GGT-NAE03.Field Bus MSTP1.999 AHU_Generic2"
                                            },
                                            {
                                                "name": "AHU",
                                                "isAuthorized": true,
                                                "isDeleted": false,
                                                "value": "equipment.FUI01.Field Bus MSTP1.ahu"
                                            }
                                        ]
                                }
                            ],
                        "format":
                            {
                                "priority": true,
                                "message": true,
                                "value": true,
                                "siteName": false,
                                "itemDescription": true,
                                "itemFullyQualifiedReference": true,
                                "authorizationCategory": true,
                                "acknowledgeRequired": false,
                                "previousStatus": false
                            },
                        "escalationConfiguration":
                            {
                                "emailRecipients": [ "manager@jci.com" ],
                                "delayInterval":
                                    {
                                        "hours": 5,
                                        "minutes": 30
                                    }
                            }
                    }
                ]
            }

### Retrieve single email destination for server [GET /notifiers/email/destinations/{destinationid}]
Retrieve email notifier destinations for server

+ Parameters
    + destinationid (string) - The unique identifier of the destination

+ Request
    + Headers

            Accept: application/vnd.metasysapi.v2+json
            Authorization: Bearer [token]

+ Response 200 (application/vnd.metasysapi.v2+json)
    + Headers

    + Attributes(EmailNotifierDestinationForServer)

    + Body

            {
            "id": "f391d369-7eaa-5deb-8d1d-fb6697d679fc",
            "label": "Destination 1",
            "toEmailAddresses": [ "operator@jci.com" ],
            "priority": "Normal",
            "subject": "Floor One",
            "retries": 3,
            "enabled": true,
            "readOnly": false,
            "eventFilter":
                [
                    {
                        "name": "Current Status",
                        "operator": "==",
                        "values":
                            [
                                {
                                    "value": "Normal"
                                }
                            ]
                    },
                    {
                        "name": "Priority",
                        "operator": "!=",
                        "values":
                            [
                                {
                                    "value": "120"
                                }
                            ]
                    },
                    {
                        "name": "Spaces",
                        "operator": "==",
                        "values":
                            [
                                {
                                    "name": "AHU_Floor",
                                    "isAuthorized": true,
                                    "isDeleted": false,
                                    "value": "Generic 1.AHUSpace.AHU_Floor"
                                },
                                {
                                    "name": "AHU_Room 12",
                                    "isAuthorized": true,
                                    "isDeleted": false,
                                    "value": "Generic 1.AHUSpace.AHU_Floor.AHU_Room 12"
                                }
                            ]
                    },
                    {
                       "name": "Equipment",
                       "operator": "==",
                       "values":
                           [
                               {
                                   "name": "999 AHU_Generic2",
                                   "isAuthorized": true,
                                   "isDeleted": false,
                                   "value": "equipment.GGT-NAE03.Field Bus MSTP1.999 AHU_Generic2"
                               },
                               {
                                   "name": "AHU",
                                   "isAuthorized": true,
                                   "isDeleted": false,
                                   "value": "equipment.FUI01.Field Bus MSTP1.ahu"
                               }
                           ]
                    }
                ],
            "format":
                {
                    "priority": true,
                    "message": true,
                    "value": true,
                    "siteName": false,
                    "itemDescription": true,
                    "itemFullyQualifiedReference": true,
                    "authorizationCategory": true,
                    "acknowledgeRequired": false,
                    "previousStatus": false
                },
            "escalationConfiguration":
                {
                    "emailRecipients": [ "manager@jci.com" ],
                    "delayInterval":
                        {
                            "hours": 5,
                            "minutes": 30
                        }
                }
            }

### Retrieve email destination constraints for server [GET /notifiers/email/destinations/constraints]
Retrieves constraints for the email notifier destination of the server.

+ Request
    + Headers

            Accept: application/vnd.metasysapi.v1+json
            Authorization: Bearer [token]

+ Response 200 (application/vnd.metasysapi.v1+json)
    + Headers

            Allow: GET

    + Attributes(EmailNotifierDestinationConstraintForServer)

    + Body

            {
            "label":
                {
                    "label": "Label",
                    "type": "string",
                    "required": true,
                    "readOnly": false,
                    "maxLength": 80,
                    "defaultValue": ""
                },
            "toEmailAddresses":
                {
                    "label": "Email Address",
                    "type": "array",
                    "required": true,
                    "readOnly": false,
                    "of":
                        {
                            "type": "email",
                            "maxLength": 256
                        },
                    "defaultValue": ""
                },
            "priority":
                {
                    "label": "Priority",
                    "type": "enum",
                    "required": true,
                    "readOnly": false,
                    "set":
                        {
                            "high": "High",
                            "normal": "Normal",
                            "low": "Low"
                        },
                    "defaultValue": "normal"
                },
            "subject":
                {
                    "label": "Subject",
                    "type": "string",
                    "required": false,
                    "readOnly": false,
                    "maxLength": 256,
                    "defaultValue": ""
                },
            "retries":
                {
                    "label": "Retries",
                    "type": "number",
                    "required": true,
                    "readOnly": false,
                    "precision": 0,
                    "minimum": 0,
                    "maximum": 10,
                    "defaultValue": 3
                },
            "enabled":
                {
                    "label": "Enabled",
                    "type": "boolean",
                    "required": true,
                    "readOnly": false,
                    "set":
                        {
                            "false": "False",
                            "true": "True"
                        },
                    "defaultValue": "true"
                },
            "format":
                {
                    "label": "Format",
                    "type": "bits",
                    "required": false,
                    "readOnly": false,
                    "priority":
                        {
                            "label": "Priority",
                            "defaultValue": true
                        },
                    "message":
                        {
                            "label": "Message",
                            "defaultValue": true
                        },
                    "value":
                        {
                            "label": "Value",
                            "defaultValue": true
                        },
                    "siteName":
                        {
                            "label": "Site Name",
                            "defaultValue": false
                        },
                    "itemDescription":
                        {
                            "label": "Item Description",
                            "defaultValue": true
                        },
                    "itemFullyQualifiedReference":
                        {
                            "label": "Item Fully Qualified Reference",
                            "defaultValue": true
                        },
                    "authorizationCategory":
                        {
                            "label": "Authorization Category",
                            "defaultValue": true
                        },
                    "acknowledgeRequired":
                        {
                            "label": "Acknowledge Required",
                            "defaultValue": false
                        },
                    "previousStatus":
                        {
                            "label": "Previous Status",
                            "defaultValue": false
                        }
                },
            "eventFilters":
                {
                    "label": "Event Filters",
                    "type": "array",
                    "required": false,
                    "readOnly": false,
                    "of":
                        {
                            "type": "filter",
                            "set":
                                {
                                    "currentStatus":
                                        {
                                            "required": true,
                                            "label": "Current Status",
                                            "operators":
                                                {
                                                    "==": "Equals To",
                                                    "!=": "Not Equals To"
                                                },
                                            "type": "enum",
                                            "values":
                                                {
                                                    "normal": "Normal",
                                                    "fault": "Fault",
                                                    "offNormal": "Off Normal",
                                                    "highLimit": "High Limit",
                                                    "lowLimit": "Low Limit",
                                                    "lowWarning": "Low Warning",
                                                    "highWarning": "High Warning",
                                                    "lowAlarm": "Low Alarm",
                                                    "highAlarm": "High Alarm",
                                                    "alarm": "Alarm",
                                                    "trouble": "Trouble",
                                                    "status": "Status",
                                                    "offline": "Offline",
                                                    "shutdowm": "Shutdown",
                                                    "unreliable": "Unreliable",
                                                    "null": null,
                                                    "online": "Online",
                                                    "aboveSetpoint": "Above Setpoint",
                                                    "belowSetpoint": "Below Setpoint",
                                                    "unoccupied": "Unoccupied"
                                                }
                                        },
                                    "priority":
                                        {
                                            "minimum": 0,
                                            "maximum": 255,
                                            "required": true,
                                            "label": "Priority",
                                            "operators":
                                                {
                                                    "==": "Equals To",
                                                    "!=": "Not Equals To",
                                                    "<" : "Less Than",
                                                    "<=": "Less Than Equals To",
                                                    ">" : "Greater Than",
                                                    ">=": "Greater Than Equals To"
                                                },
                                            "type": "number",
                                            "values": {}
                                        },
                                    "authorizationCategory":
                                        {
                                            "required": true,
                                            "label": "Authorization Category",
                                            "operators":
                                                {
                                                    "==": "Equals To",
                                                    "!=": "Not Equals To"
                                                },
                                            "type": "enum",
                                            "values":
                                                {
                                                    "hvac": "HVAC",
                                                    "fire": "Fire",
                                                    "security": "Security",
                                                    "services": "Services",
                                                    "administrative": "Administrative",
                                                    "general": "General",
                                                    "lighting": "Lighting",
                                                    "refrigeration": "Refrigeration",
                                                    "criticalEnviroment": "Critical Environment",
                                                    "airQuality": "Air Quality",
                                                    "power": "Power",
                                                    "energy": "Energy",
                                                    "system": "System"
                                            }
                                        },
                                    "acknowledgeRequired":
                                        {
                                            "required": true,
                                            "label": "Acknowledge Required",
                                            "operators":
                                                {
                                                    "==": "Equals To",
                                                    "!=": "Not Equals To"
                                                },
                                            "type": "boolean",
                                            "values":
                                                {
                                                    "false": "False",
                                                    "true": "True"
                                                }
                                        },
                                    "previousStatus":
                                        {
                                            "required": true,
                                            "label": "Previous Status",
                                            "operators":
                                                {
                                                    "==": "Equals To",
                                                    "!=": "Not Equals To"
                                                },
                                            "type": "enum",
                                            "values":
                                                {
                                                    "normal": "Normal",
                                                    "fault": "Fault",
                                                    "offNormal": "Off Normal",
                                                    "highLimit": "High Limit",
                                                    "lowLimit": "Low Limit",
                                                    "lowWarning": "Low Warning",
                                                    "highWarning": "High Warning",
                                                    "lowAlarm": "Low Alarm",
                                                    "highAlarm": "High Alarm",
                                                    "alarm": "Alarm",
                                                    "trouble": "Trouble",
                                                    "status": "Status",
                                                    "offline": "Offline",
                                                    "shutdowm": "Shutdown",
                                                    "unreliable": "Unreliable",
                                                    "null": null,
                                                    "online": "Online",
                                                    "aboveSetpoint": "Above Setpoint",
                                                    "belowSetpoint": "Below Setpoint",
                                                    "unoccupied": "Unoccupied"
                                                }
                                        },
                                    "startDayOfWeek":
                                        {
                                            "required": true,
                                            "label": "Start Day Of Week",
                                            "operators":
                                                {
                                                    "==": "Equals To",
                                                    "!=": "Not Equals To",
                                                    "<" : "Less Than",
                                                    "<=": "Less Than Equals To",
                                                    ">" : "Greater Than",
                                                    ">=": "Greater Than Equals To"
                                                },
                                            "type": "enum",
                                            "values":
                                                {
                                                    "monday": "Monday",
                                                    "tuesday": "Tuesday",
                                                    "wednesday": "Wednesday",
                                                    "thursday": "Thursday",
                                                    "friday": "Friday",
                                                    "saturday": "Saturday",
                                                    "sunday": "Sunday"
                                                }
                                        },
                                    "startTime":
                                        {
                                            "required": true,
                                            "label": "Start Time",
                                            "operators":
                                                {
                                                    "==": "Equals To",
                                                    "!=": "Not Equals To",
                                                    "<" : "Less Than",
                                                    "<=": "Less Than Equals To",
                                                    ">" : "Greater Than",
                                                    ">=": "Greater Than Equals To"
                                                },
                                            "type": "time",
                                            "values": {}
                                        },
                                    "endDayOfWeek":
                                        {
                                            "required": true,
                                            "label": "End Day Of Week",
                                            "operators":
                                                {
                                                    "==": "Equals To",
                                                    "!=": "Not Equals To",
                                                    "<" : "Less Than",
                                                    "<=": "Less Than Equals To",
                                                    ">" : "Greater Than",
                                                    ">=": "Greater Than Equals To"
                                                },
                                            "type": "enum",
                                            "values":
                                                {
                                                    "monday": "Monday",
                                                    "tuesday": "Tuesday",
                                                    "wednesday": "Wednesday",
                                                    "thursday": "Thursday",
                                                    "friday": "Friday",
                                                    "saturday": "Saturday",
                                                    "sunday": "Sunday"
                                                }
                                        },
                                    "endTime":
                                        {
                                            "required": true,
                                            "label": "End Time",
                                            "operators":
                                                {
                                                    "==": "Equals To",
                                                    "!=": "Not Equals To",
                                                    "<" : "Less Than",
                                                    "<=": "Less Than Equals To",
                                                    ">" : "Greater Than",
                                                    ">=": "Greater Than Equals To"
                                                },
                                            "type": "time",
                                            "values": {}
                                        },
                                    "spaces":
                                        {
                                            "required": true,
                                            "label": "Spaces",
                                            "operators":
                                                {
                                                    "==": "Equals To",
                                                    "!=": "Not Equals To"
                                                },
                                            "type": "space",
                                            "values": {}
                                        },
                                    "equipment":
                                        {
                                            "required": true,
                                            "label": "Equipment",
                                            "operators":
                                                {
                                                    "==": "Equals To",
                                                    "!=": "Not Equals To"
                                                },
                                            "type": "equipment",
                                            "values": {}
                                        }
                                }
                        },
                    "defaultValue": null
                },
            "escalationConfiguration":
                {
                    "label": "Escalation Configuration",
                    "required": false,
                    "readOnly": false,
                    "delayInterval":
                        {
                            "label": "Escalation Delay",
                            "required": false,
                            "readOnly": false,
                            "hours":
                                {
                                    "label": "Hour",
                                    "type": "number",
                                    "required": false,
                                    "readOnly": false,
                                    "precision": 0,
                                    "minimum": 0,
                                    "maximum": 8759,
                                    "defaultValue": 0
                                },
                            "minutes":
                                {
                                    "label": "Minute",
                                    "type": "number",
                                    "required": false,
                                    "readOnly": false,
                                    "precision": 0,
                                    "minimum": 0,
                                    "maximum": 59,
                                    "defaultValue": 0
                                }
                        },
                    "emailRecipients":
                        {
                            "label": "Escalation Email Recipients",
                            "type": "array",
                            "required": false,
                            "readOnly": false,
                            "of":
                                {
                                    "type": "email",
                                    "maxLength": 256
                                },
                            "defaultValue": ""
                        }
                }
            }

### Add email destination for server [POST]
Add new email notifier destination for server

+ Request

    + Attributes(NewEmailNotifierDestinationForServer)

    + Body

            {
            "label": "Destination 1",
            "toEmailAddresses": [ "operator@jci.com" ],
            "priority": "Normal",
            "subject": "Floor One",
            "retries": 3,
            "enabled": true,
            "eventFilter":
                [
                    {
                        "name": "Current Status",
                        "operator": "==",
                        "values": [ "Normal" ]
                    },
                    {
                        "name": "Priority",
                        "operator": "!=",
                        "values": [ "120" ]
                    },
                    {
                        "name": "Spaces",
                        "operator": "==",
                        "values": [ "Generic 1.AHUSpace.AHU_Floor", "Generic 1.AHUSpace.AHU_Floor.AHU_Room 12"]
                    },
                    {
                       "name": "Equipment",
                       "operator": "==",
                       "values": [ "equipment.GGT-NAE03.Field Bus MSTP1.999 AHU_Generic2", "equipment.FUI01.Field Bus MSTP1.ahu" ]
                    }
                ],
            "format":
                {
                    "priority": true,
                    "message": true,
                    "value": true,
                    "siteName": false,
                    "itemDescription": true,
                    "itemFullyQualifiedReference": true,
                    "authorizationCategory": true,
                    "acknowledgeRequired": false,
                    "previousStatus": false
                },
            "escalationConfiguration":
                {
                    "emailRecipients": [ "manager@jci.com" ],
                    "delayInterval":
                        {
                            "hours": 5,
                            "minutes": 30
                        }
                }
            }


    + Headers

            Accept: application/vnd.metasysapi.v2+json
            Authorization: Bearer [token]

+ Response 201 (application/vnd.metasysapi.v2+json)
    + Headers

    + Attributes (DestinationSaveSuccessful)

### Update email destination for server [PUT /notifiers/email/destinations/{destinationid}]
Update email notifier single destination for server

+ Parameters
    + destinationid (string) - The unique identifier of the destination

+ Request

    + Attributes(NewEmailNotifierDestinationForServer)

    + Body

            {
            "label": "Destination 1",
            "toEmailAddresses": [ "operator@jci.com" ],
            "priority": "Normal",
            "subject": "Floor One",
            "retries": 3,
            "enabled": true,
            "eventFilter":
                [
                    {
                        "name": "Current Status",
                        "operator": "==",
                        "values": [ "Normal" ]
                    },
                    {
                        "name": "Priority",
                        "operator": "!=",
                        "values": [ "120" ]
                    },
                    {
                        "name": "Spaces",
                        "operator": "==",
                        "values": [ "Generic 1.AHUSpace.AHU_Floor", "Generic 1.AHUSpace.AHU_Floor.AHU_Room 12"]
                    },
                    {
                       "name": "Equipment",
                       "operator": "==",
                       "values": [ "equipment.GGT-NAE03.Field Bus MSTP1.999 AHU_Generic2", "equipment.FUI01.Field Bus MSTP1.ahu" ]
                    }
                ],
            "format":
                {
                    "priority": true,
                    "message": true,
                    "value": true,
                    "siteName": false,
                    "itemDescription": true,
                    "itemFullyQualifiedReference": true,
                    "authorizationCategory": true,
                    "acknowledgeRequired": false,
                    "previousStatus": false
                },
            "escalationConfiguration":
                {
                    "emailRecipients": [ "manager@jci.com" ],
                    "delayInterval":
                        {
                            "hours": 5,
                            "minutes": 30
                        }
                }
            }

    + Headers

            Accept: application/vnd.metasysapi.v2+json
            Authorization: Bearer [token]

+ Response 200 (application/vnd.metasysapi.v2+json)
    + Headers

    + Attributes (DestinationSaveSuccessful)

### Delete email destination for server [DELETE /notifiers/email/destinations/{destinationid}]
Delete email notifier single destination for server

+ Parameters
    + destinationid (string) - The unique identifier of the destination

+ Request

    + Headers

            Accept: application/vnd.metasysapi.v2+json
            Authorization: Bearer [token]

+ Response 204 (application/vnd.metasysapi.v2+json)
